h4:not(main > *, .post *),
:is(.callout, .warning, .info, .note, .tip, .example) > summary,
pre > code[data-file]::before,
main aside:where(:not(.pullquote))::before,
:is(.callout, .warning, .info, .note, .tip, .example)::before {
	--offset: .5em;

	padding: .3em 1em;
	width: max-content;
	column-span: all;
	align-self: start;
	clip-path: polygon(var(--offset) 0, 100% 0, calc(100% - var(--offset)) 100%, 0 100%);
	margin: 0;
	margin-left: calc(-1 * var(--offset));
	margin-bottom: .4rem;
	background: var(--label-color, var(--color-accent));
	font: 800 .8rem/1.2 var(--font-sans);
	text-transform: uppercase;
	color: white;

	> a {
		color: inherit;
	}
}

main aside:where(:not(.pullquote)),
.callout,
.warning,
.info,
.note,
.tip,
.example {
	--_color-light: var(--color-light, var(--color-accent2-light2));

	position: relative;
	background: var(--_color-light);
	padding: 1.2rem 1rem .8rem;
	border-radius: .3rem;
	margin-top: 1.6em;
	margin-bottom: 1em;
	container: callout / inline-size;
	font-family: var(--font-sans);
	font-size: 80%;
	font-weight: 500;

	--code-background: color-mix(in lab, var(--color) 10%, lab(none none none / 0%));

	> :is(p, ul, ol, dl):where(:only-child, h4 + :last-child) {
		margin-block: 0;
	}

	&:not(:has(h4, ummary))::before {
		content: var(--label);
	}

	& h4,
	&::before,
	&[open] > summary {
		color: var(--_color-light);
		margin-bottom: 0;
	}

	&::before {
		display: block;
	}

	& h4,
	&::before {
		margin-top: -2em;
		margin-bottom: .8em;
	}

	&[open] > summary {
		position: absolute;
		top: -1em;
		left: 2.5rem;
	}

	code:not(pre > *) {
		font-size: 100%;
		background: none;
	}

	pre[class*="language-"][class*="language-"] {
		padding: .5em .8em;
		background: var(--code-background);
	}

	&.plain,
	&.no-icon {
		--icon: initial;
	}

	&.plain {
		--label: initial;
		padding: .8rem 1.2rem .8rem;
	}
}

main aside:where(:not(.pullquote)) {
	--label: "Aside";
	font-size: 75%;

	&:not([class]) {
		color: var(--color-gray-40);
	}

	&[id=toc] {
		/* TOC sidebar */
		z-index: 1;
		mix-blend-mode: multiply;

		& > ul {
			display: flex;
			flex-flow: column;
			gap: .8em;
			margin: 0;
			padding: 0;
			list-style: none;
		}

		& a {
			color: inherit;
		}

		.metabit {
			font-size: inherit;
			-webkit-font-smoothing: inherit;
			color: inherit;
		}

		@media (width > 960px) {
			/* Sidebar */
			position: absolute;
			--min-header-height: 12.8rem;
			top: 2.5em;
			inset-inline-end: 1em;
			width: calc(var(--content-margin-end) - 2em);
			background: none;

			&:is(header.out-of-view + main *) {
				position: fixed;
			}

			& > h4 {
				color: white;
			}
		}

		@media (width <= 960px) {
			/* At the top of content */
			margin-top: 3em;
		}
	}

	&:not([id=toc]) {
		/* Aside comments in an article */
		&:not(:has(> h4))::before {
			content: var(--label);
			background: var(--color, var(--color-accent3));
		}

		& a:where(:not(h4 > :only-child)) {
			text-decoration: underline;

			&:not(:hover) {
				color: inherit;
			}
		}
	}
}

.callout,
.warning,
.info,
.note,
.tip,
.example {
	@supports (color: color-mix(in lab, white, black)) {
		--color-lighter: color-mix(in lab, var(--color), white 88%);
		--color-darker: color-mix(in lab, var(--color), black 20%);
	}

	@media (width > 600px) {
		&:where(:not(.plain, .no-icon)) {
			padding-left: 4.5em;
		}

		&::after {
			content: var(--icon);
			position: absolute;
			left: .5rem;
			top: 50%;
			transform: translateY(-50%);
			font: var(--icon-font);
			font-size: 180%;
			background: white;
			min-width: 1.65em;
			padding: .25em .45em .35em;
			border-radius: 50%;
			color: var(--color, var(--color-orange));
			text-align: center;
		}
	}

	a {
		color: var(--link-color, var(--color, var(--color-accent)));
		mix-blend-mode: multiply;
		font-weight: 600;
	}
}

.warning {
	--label: "Here Be Dragons";
	--icon: var(--icon-triangle-exclamation);
	--color: var(--color-orange);
	--color-light: var(--color-accent2-light2);
	--label-color: var(--color-orange);
	--link-color: var(--color-darker);
}

.info,
.question {
	--icon: var(--icon-info);
	--color: var(--color-blue);
	--color-light: var(--color-lighter);
	--label-color: var(--color);
	--link-color: var(--color-darker);
}

.info {
	--label: "FYI";
}

.question {
	--icon: var(--icon-question);
}

.note,
.tip,
.example {
	--label: "Note";
	--icon: var(--icon-clipboard-check);
	--color: var(--color-green);
	--color-light: var(--color-lighter);
	--label-color: var(--color);
	--link-color: var(--color-darker);
}

.example {
	--color: var(--color-blue);
	--label: "Example";
	--icon: initial;
	padding-inline: 2em;

	&.bad {
		--color: var(--color-red);
	}

	&.good {
		--color: var(--color-green);
	}
}

.todo {
	--label: "TODO";
	--icon: var(--icon-clipboard-check);
	--color: var(--color-orange);
	--color-light: var(--color-lighter);
	--label-color: var(--color);
	--link-color: var(--color-darker);
}

.tip {
	--label: "Tip";
	--icon: var(--icon-lightbulb);
}

details.callout {
	> summary > p {
		display: contents;
	}
}

details.with-preview {
	--preview-max-height: 20em;
	--preview-fade-height: 10em;
	--toggle-label-open: "Show less";
	--toggle-label-closed: "Show more";

	position: relative;
	margin-block-end: 3.5rem;

	> summary {
		position: static;
		cursor: pointer;

		&::after {
			content: var(--toggle-label-open);
			position: absolute;
			z-index: 1;
			inset-inline: 0;
			inset-block-start: 100%;
			margin-block-start: .5em;
			padding: .5rem;
			text-align: center;
			background: var(--color-accent2-light2);
			font-size: .8em;
		}

		&:hover::after {
			background: var(--color-accent2-light1);
		}
	}

	&::details-content {
		content-visibility: visible;
		transition: .4s allow-discrete;
		transition-property: max-height, mask;
		max-height: calc-size(max-content, size);
	}

	&:not([open]) {
		> summary::after {
			content: var(--toggle-label-closed);
		}

		&::details-content {
			max-height: min(50vh, var(--preview-max-height));
			overflow: hidden;
			mask-image: linear-gradient(to bottom, white calc(100% - var(--preview-fade-height)), transparent);
			user-select: none;
		}
	}
}
